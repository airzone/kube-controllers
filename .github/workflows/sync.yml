name: Sync source project branch

on:
  workflow_dispatch:
  schedule:
  # 定时任务，在每天的0点
    - cron: '0 16 * * *'

jobs:

  sync-tags:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/checkout@v2
      with:
        repository: projectcalico/kube-controllers
        fetch-depth: 0
        path: 'sync_project'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1.1.0
      with:
        platforms: all
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Available platforms
      run: echo Available platforms [${{ steps.buildx.outputs.platforms }}]

    - name: Prepare
      id: prepare
      run: |
        echo ::set-output name=image_repo::${{ secrets.DOCKER_USERNAME }}/kube-controllers
        echo ::set-output name=platforms::linux/amd64,linux/arm64
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: sync
      run: |
        git config --local user.name Robot
        git config --local user.email Robot@users.noreply.github.com
        SYNC_VERSIONS=SYNC_VERSIONS.md
        for t in `git --git-dir ./sync_project/.git tag -l | grep "^v[0-9]*\.[0-9]*\.[0-9]*$"`
        do
          if [ -z "`cat ${SYNC_VERSIONS} | grep $t`" ]; then
            IMAGE_NAME=${{ steps.prepare.outputs.image_repo }}:$t
            docker buildx build . --platform ${{ steps.prepare.outputs.platforms }} \
              -t ${IMAGE_NAME} \
              --build-arg IMAGE_TAG=$t \
              --push
            echo "* $t" >> ${SYNC_VERSIONS}
            git add ${SYNC_VERSIONS}
            git commit -m "buildx image ${IMAGE_NAME}"
            git push origin
          fi
        done
